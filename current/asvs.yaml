---
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.1
    section_name: Secure Software Development Lifecycle Requirements
    req_id: V1.1.1
    req_description: Verify the use of a secure software development lifecycle that addresses security in all stages of development. ([C1](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe:
    nist:
    units:
        -
            unit: 'Secure SDLC'
            terms:
                - 'Secure SDLC'
                - 'stages of development'
            level: 5
    actions:
        -
            action: 'verify the use'
            level: 2
            mapping: 
                - 'Secure SDLC'
        -
            action: 'that addresses security'
            level: 5
            mapping: 
                - 'Secure SDLC'
    notes: 'The terms here are too broad and also impossible to successfully verify. What makes an SDLC secure needs to be defined and in what way this needs to address security needs to be made more clear. Should it be in this section?'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.1
    section_name: Secure Software Development Lifecycle Requirements
    req_id: V1.1.2
    req_description: Verify the use of threat modeling for every design change or sprint planning to identify threats, plan for countermeasures, facilitate appropriate risk responses, and guide security testing.
    level1:
    level2: ✓
    level3: ✓
    cwe: 1053
    nist:
    units:
        -
            unit: 'Threat Modeling'
            terms:
                - 'threats'
                - 'threat modeling'
            level: 2
        -
            unit: 'System Design'
            terms:
                - 'design change'
            level: 2
        -
            unit: 'Agile Development'
            terms:
                - 'sprint planning'
            level: 2
        -
            unit: 'Waterfall Development'
            terms:
                - 'design change'
            level: 2
        -
            unit: 'Security Controls'
            terms:
                - 'countermeasures'
                - 'risk responses'
            level: 5
        -
            unit: 'Secure SDLC'
            terms:
                - 'security testing'
            level: 3
    action:
        -
            action: 'verify the use'
            level: 2
            mappings:
                - 'Threat modeling'
        - 
            action: 'appropriate'
            level: 5
            mappings:
                - 'Security Controls'
    notes: 'There is a variance in levels of checking for the aspects of threat modeling listed here. Does this list of aspects cover enough of threat modeling? Should the requirement just mandate the use of a standard threat modeling framework?'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.1
    section_name: Secure Software Development Lifecycle Requirements
    req_id: V1.1.3
    req_description: 'Verify that all user stories and features contain functional security constraints, such as "As a user, I should be able to view and edit my profile. I should not be able to view or edit anyone else''s profile"'
    level1:
    level2: ✓
    level3: ✓
    cwe: 1110
    nist:
    units:
        -
            unit: 'Agile Development'
            level: 2
            terms:
                - 'user stories'
                - 'features'
        -
            unit: 'Security Requirements'
            level: 2
            terms:
                - 'functional security constraints'
    actions:
        -
            action: 'Verify that'
            level: 2
            mappings:
                - 'Agile Development'
        -
            action: 'contain'
            level: 2
            terms:
                - 'Security Requirements'

    notes: 'This reads as an unreasonable requirement and should be re-written to cover only user stories that impact security (identified from 1.1.2 above). The core requirement is probably that security requirements/constraints defined in the threat modeling are carried through to the definition of the work item for the developer implementing the feature.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.1
    section_name: Secure Software Development Lifecycle Requirements
    req_id: V1.1.4
    req_description: 'Verify documentation and justification of all the application''s trust boundaries, components, and significant data flows.'
    level1:
    level2: ✓
    level3: ✓
    cwe: 1059
    nist:
    units:
        -
            unit: 'System Architecture'
            terms:
                - 'documentation'
                - 'components'
                - 'data flows'
            level: 2
        -
            unit: 'Threat modeling'
            terms:
                - 'trust boundaries'
                - 'justification'
            level: 4
    actions:
        -
            action: 'verify'
            level: 2
            mappings:
                - 'System Architecture'
                - 'Threat modeling'
        -
            action: 'justification'
            level: 4
            mappings:
                - 'Threat modeling'

    notes: 'Is this "verify the existence of" documentation or verify it all accurately maps to reality and that the trust boundaries and reasons for them make sense? Assuming the latter.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.1
    section_name: Secure Software Development Lifecycle Requirements
    req_id: V1.1.5
    req_description: 'Verify definition and security analysis of the application''s high-level architecture and all connected remote services. ([C1](https://owasp.org/www-project-proactive-controls/#div-numbering))'
    level1:
    level2: ✓
    level3: ✓
    cwe: 1059
    nist:
    units:
        -
            unit: 'System Architecture'
            terms:
                - 'high-level architecture'
            level: 2
        -
            unit: 'Threat modeling'
            terms:
                - 'security analysis'
            level: 4
    actions:
        -
            action: 'verify'
            level: 2
            mappings:
                - 'System Architecture'
                - 'Threat modeling'
        -
            action: 'analysis'
            level: 4
            mappings:
                - 'Threat modeling'
    notes: 'Very similar to 1.1.4 just broader in scope to cover overall security analysis/threat modeling output, not just trust boundaries. Could be combined'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.1
    section_name: Secure Software Development Lifecycle Requirements
    req_id: V1.1.6
    req_description: Verify implementation of centralized, simple (economy of design), vetted, secure, and reusable security controls to avoid duplicate, missing, ineffective, or insecure controls. ([C10](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 637
    nist:
    units:
        -
            unit: 'Secure SDLC'
            terms: 
                - 'security controls'
            level: 5
    actions:
        -
            action: 'verify implementation of'
            level: 5
            mappings:
                - 'Secure SDLC'
    notes: 'Very broad. As 1.1.1, controls required for a SDLC to be secure must be defined to allow identification of duplicate, missing, ineffective or insecure controls. Examples would make this section easier to evaluate'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.1
    section_name: Secure Software Development Lifecycle Requirements
    req_id: V1.1.7
    req_description: Verify availability of a secure coding checklist, security requirements, guideline, or policy to all developers and testers.
    level1:
    level2: ✓
    level3: ✓
    cwe: 637
    nist:
    units:
        -
            unit: 'Secure SDLC'
            terms:
                - 'secure coding checklist'
                - 'security requirements'
                - 'security guidelines'
                - 'security policy'
            level: 2
    actions:
        -
            action: 'verify availability of'
            level: 2
            mappings:
                - 'Secure SDLC'
    notes: 'This requirement should stipulate that these documents are in active use and maintained as part of the SDLC. Merely being available is not enough. It also reads as only one of the listed documents is required.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.2
    section_name: Authentication Architectural Requirements
    req_id: V1.2.1
    req_description: Verify the use of unique or special low-privilege operating system accounts for all application components, services, and servers. ([C3](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 250
    nist:
    units:
        -
            unit: 'System Architecture'
            terms: 
                - 'application components'
                - 'services'
                - 'servers'
            level: 2
        -
            unit: 'Authentication'
            terms: 
                - 'operating system accounts'
                - 'unique'
                - 'low-privilege'
            level: 4
        -
            unit: 'Authorization'
            terms: 
                - 'operating system accounts'
                - 'low-privilege'
            level: 4
        -
            unit: 'Least Privilege'
            terms: 
                - 'low-privilege'
            level: 4
    actions:
        -
            action: 'verify the use of'
            level: 4
            mappings:
                - 'Least Privilege'
    notes: 'Intent is to cover service accounts or roles, not user accounts. The "or" operator allows for high-privilege roles if they are unique, which violates the principal of least privilege. Needs clarifying and to be brought into the 21st century.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.2
    section_name: Authentication Architectural Requirements
    req_id: V1.2.2
    req_description: Verify that communications between application components, including APIs, middleware and data layers, are authenticated. Components should have the least necessary privileges needed. ([C3](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 306
    nist:
    units:
        -
            unit: 'System Architecture'
            terms: 
                - 'application components'
                - 'APIs'
                - 'middleware'
                - 'data layers'
            level: 4
        -
            unit: 'Networking'
            terms: 
                - 'communications'
            level: 2
        -
            unit: 'Authentication'
            terms: 
                - 'authenticated'
            level: 4
        -
            unit: 'Authorization'
            terms: 
                - 'least necessary privileges'
            level: 4
        -
            unit: 'Least Privilege'
            terms: 
                - 'least necessary privileges'
            level: 4
    actions:
        -
            action: 'verify that'
            level: 4
            mappings:
                - 'System Architecture'
                - 'Authentication'
                - 'Authorization'
                - 'Least Privilege'
    notes: 'Shouldn''t include authorization requirements in a requirement focused on strong identity for all comms. Be clear if the intent is to strongly authenticate communications over network sockets, including localhost. Be clear it is ALL comms.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.2
    section_name: Authentication Architectural Requirements
    req_id: V1.2.3
    req_description: Verify that the application uses a single vetted authentication mechanism that is known to be secure, can be extended to include strong authentication, and has sufficient logging and monitoring to detect account abuse or breaches.
    level1:
    level2: ✓
    level3: ✓
    cwe: 306
    nist:
    units:
        -
            unit: 'Authentication'
            terms:
                - 'authentication mechanism'
                - 'strong authentication'
            level: 2
        -
            unit: 'Schneier Principle (Don''t Roll Your Own)'
            terms:
                - 'vetted authentication mechanism'
                - 'know to be secure'
            level: 2
        -
            unit: 'Logging'
            terms:
                - 'logging and monitoring'
            level: 5
        -
            unit: 'Attacks'
            terms:
                - 'breaches'
                - 'account abuse'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
                - 'Schneier Principle (Don''t Roll Your Own)'
        -
            action: 'sufficient'
            level: 5
            mappings:
                - 'Logging'
        -
            action: 'detect'
            level: 2
            mappings:
                - 'Attacks'

    notes: 'Too broad. Logging and monitoring is an operational security concern that could move to its own requirement. "Strong authentication" is undefined. As written, a system would fail this requirement if it was using mutual TLS in one part of the system and API keys for another.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.2
    section_name: Authentication Architectural Requirements
    req_id: V1.2.4
    req_description: Verify that all authentication pathways and identity management APIs implement consistent authentication security control strength, such that there are no weaker alternatives per the risk of the application.
    level1:
    level2: ✓
    level3: ✓
    cwe: 306
    nist:
    units:
        -
            unit: 'Authentication'
            terms: 
                - 'authentication pathways'
                - 'identity management'
                - 'authentication security control'
            level: 4
        -
            unit: 'Risk Management'
            terms: 
                - 'risk of the application'
                - 'consistent'
                - 'no weaker alternatives'
            level: 4
    actions:
        -
            action: 'verify that'
            level: 4
            mappings:
                - 'Authentication'
        -
            action: 'implement consistent'
            level: 4
            mappings:
                - 'Risk Management'
    notes: 'Previous requirement stipulated a single authentication mechanism, this one allows multiple. As written, weak authentication security controls are allowed as long as they are consistently the weakest.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.4
    section_name: Access Control Architectural Requirements
    req_id: V1.4.1
    req_description: Verify that trusted enforcement points such as at access control gateways, servers, and serverless functions enforce access controls. Never enforce access controls on the client.
    level1:
    level2: ✓
    level3: ✓
    cwe: 602
    nist:
    units:
        -
            unit: 'Authorization'
            terms: 
                - 'trusted enforcement points'
                - 'access control gateways'
                - 'access controls'
            level: 2
        -
            unit: 'Infrastructure'
            terms: 
                - 'servers'
                - 'serverless functions'
            level: 2
        -
            unit: 'Public Cloud'
            terms: 
                - 'serverless functions'
            level: 2
        -
            unit: 'Application Development'
            terms: 
                - 'client'
            level: 2
    actions:
        -
            action: 'Verify that'
            level: 2
            mappings:
                - 'Authorization'
                - 'Infrastructure'
                - 'Application Development'
                - 'Public Cloud'
    notes: 'Second sentence is unusually worded. Suggest "Verify that access controls are not enforced in any client applications." or merge the two sentences together to one Verify statement that includes client and server side.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.4
    section_name: Access Control Architectural Requirements
    req_id: V1.4.2
    req_description: 'Verify that the chosen access control solution is flexible enough to meet the application''s needs. '
    level1:
    level2: ✓
    level3: ✓
    cwe: 284
    nist:
    units:
        -
            unit: 'Authorization'
            terms: 
                - 'access control solution'
            level: 5
        -
            unit: 'Authentication'
            terms: 
                - 'access control solution'
            level: 5
        -
            unit: 'Application Development'
            terms: 
                - 'application'
            level: 5
    actions:
        -
            action: 'Verify that'
            level: 2
            mappings:
                - 'Authorization'
                - 'Authentication'
                - 'Application Development'
        -
            action: 'is flexible enough'
            level: 5
            mappings:
                - 'Authorization'
                - 'Authentication'
                - 'Application Development'
    notes: 'This is very subjective and "flexible enough" is undefined. Suggest breaking down to specifics for a more objective assessment e.g., ensure the access control solution supports: granting access to roles, not just users; enforcement of access control to data at row level as well as application actions, not requiring a code update to change, etc.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.4
    section_name: Access Control Architectural Requirements
    req_id: V1.4.3
    req_description: Verify enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.
    level1:
    level2: ✓
    level3: ✓
    cwe: 272
    nist:
    units:
        -
            unit: 'Authorization'
            terms: 
                - 'principle of least privilege'
                - 'elevation of privilege'
            level: 2
        -
            unit: 'Authentication'
            terms: 
                - 'spoofing'
            level: 2
        -
            unit: 'Attack Types'
            terms: 
                - 'spoofing'
                - 'elevation of privilege'
            level: 2
        -
            unit: 'Application Development'
            terms: 
                - 'functions'
                - 'data files'
                - 'controllers'
                - 'services'
                - 'resources'
            level: 2
        -
            unit: 'HTTP'
            terms: 
                - 'URLs'
            level: 2
    actions:
        -
            action: 'Verify enforcement'
            level: 2
            mappings:
                - 'Authorization'
                - 'Authentication'
                - 'Application Development'
                - 'Attack Types'
                - 'HTTP'
    notes: 'Should specify that "enforcement" (implementation) of least privilege is in ALL aspects mentioned. "Other resources" is too vague and makes scope undefined. Second sentence is unnecessary and reduces the focus of the requirement. Spoofing more focused on weak authentication/identity, suggest moving to its own requirement. Also suggest moving elevation of privilege to its own requirement if mitigation against it can be clearly defined for authorization.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.4
    section_name: Access Control Architectural Requirements
    req_id: V1.4.4
    req_description: Verify the application uses a single and well-vetted access control mechanism for accessing protected data and resources. All requests must pass through this single mechanism to avoid copy and paste or insecure alternative paths. ([C7](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 284
    nist:
    units:
        -
            unit: 'Authorization'
            terms: 
                - 'access control mechanism'
                - 'insecure alternative paths'
            level: 2
        -
            unit: 'Authentication'
            terms: 
                - 'access control mechanism'
                - 'insecure alternative paths'
            level: 2
        -
            unit: 'Attack Types'
            terms:
                - 'elevation of privilege'
            level: 2
        -
            unit: 'Data Security'
            terms: 
                - 'protected data'
                - 'resources'
            level: 2
        -
            unit: 'DRY'
            terms: 
                - 'copy and paste'
            level: 2
        -
            unit: 'Application Development'
            terms: 
                - 'application'
            level: 2
    actions:
        -
            action: 'Verify the application uses'
            level: 2
            mappings:
                - 'Authorization'
                - 'Authentication'
                - 'Application Development'
                - 'Data Security'
                - 'DRY'
    notes: '"Well-vetted" needs defining, perhaps as part of a glossary of terms to cover the whole standard. Detailed requirements could include: widely-used FOSS or independently audited commercial library, if internally developed then reviewed by someone not the original author, with comprehensive test coverage that explores edge cases, etc. Also suggest "insecure alternative REQUEST paths" to be clearer. Enforcing a "single" access control mechanism could rule out using, say, facebook and twitter auth in an app. This needs discussion.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.4
    section_name: Access Control Architectural Requirements
    req_id: V1.4.5
    req_description: 'Verify that attribute or feature-based access control is used whereby the code checks the user''s authorization for a feature/data item rather than just their role. Permissions should still be allocated using roles. ([C7](https://owasp.org/www-project-proactive-controls/#div-numbering))'
    level1:
    level2: ✓
    level3: ✓
    cwe: 275
    nist:
    units:
        -
            unit: 'Authorization'
            terms: 
                - 'feature-based access control'
                - 'attribute-based access control'
                - 'role'
                - 'user'
                - 'Permissions'
            level: 2
        -
            unit: 'Application Development'
            terms: 
                - 'feature'
                - 'data item'
                - 'the code'
            level: 2
    actions:
        -
            action: 'Verify that'
            level: 2
            mappings:
                - 'Authorization'
                - 'Application Development'
        -
            action: 'is used'
            level: 2
            mappings:
                - 'Authorization'
                - 'Application Development'
    notes: 'The essence of this requirement seems to be that authorization checks consider the combination of all role/group/user level permissions assigned, NOT just a single role assignment. Suggest a rewording to make the requirement clearer.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.5
    section_name: Input and Output Architectural Requirements
    req_id: V1.5.1
    req_description: Verify that input and output requirements clearly define how to handle and process data based on type, content, and applicable laws, regulations, and other policy compliance.
    level1:
    level2: ✓
    level3: ✓
    cwe: 1029
    nist:
    units:
        -
            unit: 'Data Security'
            terms: 
                - 'input and output'
                - 'handle and process data'
                - 'type'
                - 'content'
            level: 5
        -
            unit: 'Compliance'
            terms: 
                - 'applicable laws'
                - 'regulations'
                - 'other policy compliance'
            level: 5
        -
            unit: 'Application Development'
            terms: 
                - 'requirements'
            level: 5
    actions:
        -
            action: 'Verify that'
            level: 2
            mappings:
                - 'Data Security'
                - 'Compliance'
                - 'Application Development'
        -
            action: 'clearly define'
            level: 5
            mappings:
                - 'Data Security'
                - 'Compliance'
                - 'Application Development'
    notes: 'Suggest "documented requirements for data input and output exist and clearly define" for clarity'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.5
    section_name: Input and Output Architectural Requirements
    req_id: V1.5.2
    req_description: Verify that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.
    level1:
    level2: ✓
    level3: ✓
    cwe: 502
    nist:
    units:
        -
            unit: 'Data Security'
            terms: 
                - 'serialization'
                - 'deserialization'
                - 'integrity controls'
                - 'encryption'
                - 'sensitive data'
            level: 5
        -
            unit: 'Network Security'
            terms: 
                - 'communicating with untrusted clients'
                - 'encryption'
            level: 5
        -
            unit: 'Attack Types'
            terms: 
                - 'deserialization attacks'
                - 'object injection'
            level: 5
    actions:
        -
            action: 'Verify that serialization is not used'
            level: 2
            mappings:
                - 'Data Security'
                - 'Network Security'
        -
            action: 'ensure that adequate'
            level: 5
            mappings:
                - 'Data Security'
                - 'Network Security'
                - 'Attack Types'
    notes: 'We should define "adequate controls" for using serialization with untrusted client, most likely referring to separate guidance from OWASP.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.5
    section_name: Input and Output Architectural Requirements
    req_id: V1.5.3
    req_description: Verify that input validation is enforced on a trusted service layer. ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 602
    nist:
    units:
        -
            unit: 'Sanitization'
            terms: 
                - 'input validation'
            level: 2
        -
            unit: 'Application Development'
            terms: 
                - 'trusted service layer'
            level: 2
    actions:
        -
            action: 'Verify that input validation is enforced'
            level: 2
            mappings:
                - 'Sanitization'
                - 'input validation'
    notes: 'This seems to be, like 1.4.1, focused on not performing security checks client-side in an environment where they can be easily bypassed. Suggest aligning the wording as "trusted service layer" is not clearly defined and have a consistent focus on either actions (controls not being able to be bypassed by users) or environment (controls being implemented and enforced in a trusted environment).'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.5
    section_name: Input and Output Architectural Requirements
    req_id: V1.5.4
    req_description: Verify that output encoding occurs close to or by the interpreter for which it is intended. ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 116
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: 'verify that output encoding occurs close to the interpreter'
            level: 
            mappings:
                - 'output encoding'
                - 'interpreter'
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.6
    section_name: Cryptographic Architectural Requirements
    req_id: V1.6.1
    req_description: Verify that there is an explicit policy for management of cryptographic keys and that a cryptographic key lifecycle follows a key management standard such as NIST SP 800-57.
    level1:
    level2: ✓
    level3: ✓
    cwe: 320
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: 'verify there is a cryptographic key management policy'
            level: 
            mappings:
                - 'cryptographic key'
                - 'policy'
        -
            action: 'cryptographic key lifecycle follows a key management standard'
            level:
            mappings:
                - 'cryptographic key lifecycle'
                - 'cryptographic hash functions'
                - 'symmetric-key algorithms'
                - 'asymmetric-key algorithms'
                - 'message authentication codes (MACs)'
                - 'digital signatures'
                - 'key encryption keys'
                - 'root certificate'
                - 'random number generation'
                - 'perfect forward secrecy'
                - 'key generation'
                - 'key distribution'
                - 'confirmation'
                - 'establishment'
                - 'key storage'
                - 'trust store'
                - 'key backup'
                - 'key escrow'
                - 'accountability'
                - 'key compromise'
                - 'key recovery'
                - 'audit'
    notes: 'This seems to be very focused on having a policy and making sure that the policy follows a standard. It seems like we would want someone to actually implement policy. This could be simplified to: Verify there is a key management lifecycle policy that follows a public standard such as NIST SP 800-57 in place and that it is implemented appropriately.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.6
    section_name: Cryptographic Architectural Requirements
    req_id: V1.6.2
    req_description: Verify that consumers of cryptographic services protect key material and other secrets by using key vaults or API based alternatives.
    level1:
    level2: ✓
    level3: ✓
    cwe: 320
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: 'verify key material or other secrets are protected at rest'
            level: 
            mappings:
                - 'secrets'
                - 'key material'
                - 'secrets manager'
                - 'key vault' 
                - 'hardware security module (HSM)'
                - 'trusted platform module (TPM)'
                - 'FIPS'
    notes: '1) There should be some mention of "appropriate" here or call out that there may be different levels of appropriate depending on the regulatory, legal or safety reqirements for an application (different types of secrets may require more secure (and costly) storage mechanisms. 2) "Consumers for cryptographic services" is strange here. A developer would not think of themselves as a "consumer of crypto services". They would think of themselves as someone who has to implement this crypto thing (where their first instinct would be to store the key in a configuration file-- not a service). Or, they have to use a service which is protected with some sort of key... They will not think of that "service" as a "crypto-service". 3) There is a big difference in security requirements when managing key material versus plain-jane application secrets (like a database password), and you use different tools. Do we want to introduce both of these in this section? Or, should secrets and key material be managed in a different way? 4) I have added HSM and TPM because I am unsure which type of application development we are focusing on. If IOT is in focus, then TPMs become relevant. Are we focused here on storage? Or, are we also focused on processing (some vaults offer cryptoprocessing as well).'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.6
    section_name: Cryptographic Architectural Requirements
    req_id: V1.6.3
    req_description: Verify that all keys and passwords are replaceable and are part of a well-defined process to re-encrypt sensitive data.
    level1:
    level2: ✓
    level3: ✓
    cwe: 320
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: 'verify all keys are replaceable'
            level:
            mappings:
                - 'key'
                - 'key compromise'
                - 'key rotation'
                - 'key distribution'
                - 'key retirement'
        -
            action: 'verify all passwords are replaceable'
            level:
            mappings:
                - 'password'
         -
            action: 'verify all replaced keys are part of a well-defined process to re-encrypt sensitive data'
            level:
            mappings:
                - 'encryption'
                - 'sensitive data'
                - 'key replacement process'
        -
            action: ''
            level:
            mappings:
                - 'password'
    notes: '1) This is going to be trickier for IoT systems; especially if the root of trust for the device ends up having a weakness that is exploitable or the algorithm that is being used is identified as vulnerable after device release. 2) Key and passwords do need to be rotated, but the process for rotating them are very different. This seems to require two different entries in ASVS. 3) Instead of "passwords", should we use the more generic term, "secrets"?'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.6
    section_name: Cryptographic Architectural Requirements
    req_id: V1.6.4
    req_description: Verify that the architecture treats client-side secrets--such as symmetric keys, passwords, or API tokens--as insecure and never uses them to protect or access sensitive data.
    level1:
    level2: ✓
    level3: ✓
    cwe: 320
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: 'Architecture does not use client-side secrets to protect or access sensitive data'
            level: 
            mappings:
                - 'client-side'
                - 'sensitive data'
                - 'secrets'
    notes: '1) What about public keys? 2) We need to define secrets somewhere. In some cases, they seem to be separate from cryptomaterial. In other cases, it includes cryptomaterial. We need to define it and use it consistently.'
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.7
    section_name: Errors, Logging and Auditing Architectural Requirements
    req_id: V1.7.1
    req_description: Verify that a common logging format and approach is used across the system.  ([C9](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 1009
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.7
    section_name: Errors, Logging and Auditing Architectural Requirements
    req_id: V1.7.2
    req_description: Verify that logs are securely transmitted to a preferably remote system for analysis, detection, alerting, and escalation. ([C9](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe:
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.8
    section_name: Data Protection and Privacy Architectural Requirements
    req_id: V1.8.1
    req_description: Verify that all sensitive data is identified and classified into protection levels.
    level1:
    level2: ✓
    level3: ✓
    cwe:
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.8
    section_name: Data Protection and Privacy Architectural Requirements
    req_id: V1.8.2
    req_description: Verify that all protection levels have an associated set of protection requirements, such as encryption requirements, integrity requirements, retention, privacy and other confidentiality requirements, and that these are applied in the architecture.
    level1:
    level2: ✓
    level3: ✓
    cwe:
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.9
    section_name: Communications Architectural Requirements
    req_id: V1.9.1
    req_description: Verify the application encrypts communications between components, particularly when these components are in different containers, systems, sites, or cloud providers. ([C3](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 319
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.9
    section_name: Communications Architectural Requirements
    req_id: V1.9.2
    req_description: Verify that application components verify the authenticity of each side in a communication link to prevent person-in-the-middle attacks. For example, application components should validate TLS certificates and chains.
    level1:
    level2: ✓
    level3: ✓
    cwe: 295
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.10
    section_name: Malicious Software Architectural Requirements
    req_id: V1.10.1
    req_description: Verify that a source code control system is in use, with procedures to ensure that check-ins are accompanied by issues or change tickets. The source code control system should have access control and identifiable users to allow traceability of any changes.
    level1:
    level2: ✓
    level3: ✓
    cwe: 284
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.11
    section_name: Business Logic Architectural Requirements
    req_id: V1.11.1
    req_description: Verify the definition and documentation of all application components in terms of the business or security functions they provide.
    level1:
    level2: ✓
    level3: ✓
    cwe: 1059
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.11
    section_name: Business Logic Architectural Requirements
    req_id: V1.11.2
    req_description: Verify that all high-value business logic flows, including authentication, session management and access control, do not share unsynchronized state.
    level1:
    level2: ✓
    level3: ✓
    cwe: 362
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.11
    section_name: Business Logic Architectural Requirements
    req_id: V1.11.3
    req_description: Verify that all high-value business logic flows, including authentication, session management and access control are thread safe and resistant to time-of-check and time-of-use race conditions.
    level1:
    level2:
    level3: ✓
    cwe: 367
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.12
    section_name: Secure File Upload Architectural Requirements
    req_id: V1.12.1
    req_description: Verify that user-uploaded files are stored outside of the web root.
    level1:
    level2: ✓
    level3: ✓
    cwe: 552
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.12
    section_name: Secure File Upload Architectural Requirements
    req_id: V1.12.2
    req_description: Verify that user-uploaded files - if required to be displayed or downloaded from the application - are served by either octet stream downloads, or from an unrelated domain, such as a cloud file storage bucket. Implement a suitable Content Security Policy (CSP) to reduce the risk from XSS vectors or other attacks from the uploaded file.
    level1:
    level2: ✓
    level3: ✓
    cwe: 646
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.14
    section_name: Configuration Architectural Requirements
    req_id: V1.14.1
    req_description: Verify the segregation of components of differing trust levels through well-defined security controls, firewall rules, API gateways, reverse proxies, cloud-based security groups, or similar mechanisms.
    level1:
    level2: ✓
    level3: ✓
    cwe: 923
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.14
    section_name: Configuration Architectural Requirements
    req_id: V1.14.2
    req_description: Verify that binary signatures, trusted connections, and verified endpoints are used to deploy binaries to remote devices.
    level1:
    level2: ✓
    level3: ✓
    cwe: 494
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.14
    section_name: Configuration Architectural Requirements
    req_id: V1.14.3
    req_description: Verify that the build pipeline warns of out-of-date or insecure components and takes appropriate actions.
    level1:
    level2: ✓
    level3: ✓
    cwe: 1104
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.14
    section_name: Configuration Architectural Requirements
    req_id: V1.14.4
    req_description: Verify that the build pipeline contains a build step to automatically build and verify the secure deployment of the application, particularly if the application infrastructure is software defined, such as cloud environment build scripts.
    level1:
    level2: ✓
    level3: ✓
    cwe:
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.14
    section_name: Configuration Architectural Requirements
    req_id: V1.14.5
    req_description: Verify that application deployments adequately sandbox, containerize and/or isolate at the network level to delay and deter attackers from attacking other applications, especially when they are performing sensitive or dangerous actions such as deserialization. ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 265
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V1
    module: Designing a Secure System
    chapter_name: Architecture, Design and Threat Modeling Requirements
    section_id: V1.14
    section_name: Configuration Architectural Requirements
    req_id: V1.14.6
    req_description: Verify the application does not use unsupported, insecure, or deprecated client-side technologies such as NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.
    level1:
    level2: ✓
    level3: ✓
    cwe: 477
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.1
    req_description: Verify that user set passwords are at least 12 characters in length (after multiple spaces are combined). ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 521
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'user set passwords'
                - 'characters in length'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
    notes: 'Does this requirement expect the examiner to test every password or to ensure that the system allows passwords that meets this requirement? Why are spaces treated differently from other characters? There is no rational reason to remove them from a security point of view, if the issue is one of UX then it belongs in that standard not here.'
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.2
    req_description: Verify that passwords 64 characters or longer are permitted but may be no longer than 128 characters. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 521
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'user passwords'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
    notes: 'The OWASP Proactive Controls C6 referenced has no mention of an upper limit of 128. Where does this requirement come from? Can we align this with the updated NIST guidance (min 12 and at least 64 max).'
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.3
    req_description: Verify that password truncation is not performed. However, consecutive multiple spaces may be replaced by a single space. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 521
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'password truncation'
                - 'consecutive multiple spaces'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
    notes: 'The reference here does not explain the reason it is considered acceptable to modify the user input by removing consecutive spaces.'
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.4
    req_description: Verify that any printable Unicode character, including language neutral characters such as spaces and Emojis are permitted in passwords.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 521
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'printable Unicode character'
                - 'neutral characters'
                - 'spaces'
                - 'Emojis'
                - 'passwords'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
    notes: 'There are nearly 150k printable Unicode characters, perhaps some guidance on how this is testable on level 1?'
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.5
    req_description: Verify users can change their password.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 620
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'users'
                - 'passwords'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
    notes: 'Suggest adding, "without divulging their plain text password".'
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.6
    req_description: 'Verify that password change functionality requires the user''s current and new password.'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 620
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'password change'
                - 'users'
                - 'current password'
                - 'new password'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
    notes: 'I would rephrase this requirement as `requires the user''s current password as well as the new one` as the latter is obvious and it would put more emphasis on needing the old password too.'
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.7
    req_description: 'Verify that passwords submitted during account registration, login, and password change are checked against a set of breached passwords either locally (such as the top 1,000 or 10,000 most common passwords which match the system''s password policy) or using an external API. If using an API a zero knowledge proof or other mechanism should be used to ensure that the plain text password is not sent or used in verifying the breach status of the password. If the password is breached, the application must require the user to set a new non-breached password. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 521
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'password'
                - 'account registration'
                - 'login'
                - 'password change'
                - 'common passwords'
                - 'password policy'
                - 'plain text'
            level: 2
        -
            unit: 'Cryptography'
            terms:
                - 'zero knowledge proof'
            level: 2
        -
            unit: 'API'
            terms:
                - 'locally'
                - 'external API'
                - 'API'
            level: 2
        -
            unit: 'Breach'
            terms:
                - 'breached passwords'
                - 'password is breached'
                - 'non-breached'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
                - 'Cryptography'
                - 'API'
                - 'Breach'
    notes: 'The use of the word "should" must be replaced with "must" The requirement asks that the password is not used to check the breached status of itself, the intention is, I believe, that the password is never available in plain text to the remote service and should state that.'
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.8
    req_description: Verify that a password strength meter is provided to help users set a stronger password.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 521
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'password'
                - 'password strength'
                - 'users'
            level: 2
        -
            unit: 'User Interface'
            terms:
                - 'strength meter'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
                - 'User Interface'
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.9
    req_description: Verify that there are no password composition rules limiting the type of characters permitted. There should be no requirement for upper or lower case or numbers or special characters. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 521
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'password'
                - 'password composition'
                - 'special characters'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.10
    req_description: Verify that there are no periodic credential rotation or password history requirements.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 263
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'credential rotation'
                - 'password history'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
    notes: 'This requirement should end with "... for user set passwords.", requiring changes to machine passwords does not conflict with the NIST requirements.'
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.11
    req_description: Verify that "paste" functionality, browser password helpers, and external password managers are permitted.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 521
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'password helpers'
                - 'external password managers'
            level: 2
        -
            unit: 'User Interface'
            terms:
                - '"paste" functionality'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
                - 'User Interface'
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.1
    section_name: Password Security Requirements
    req_id: V2.1.12
    req_description: Verify that the user can choose to either temporarily view the entire masked password, or temporarily view the last typed character of the password on platforms that do not have this as built-in functionality.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 521
    nist: 5.1.1.2
    units:
        -
            unit: 'Authentication'
            terms:
                - 'password'
                - 'user'
            level: 2
        -
            unit: 'User Interface'
            terms:
                - 'temporarily view'
                - 'masked password'
                - 'last typed character'
            level: 2
    actions:
        -
            action: 'verify that'
            level: 2
            mappings:
                - 'Authentication'
                - 'User Interface'
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.2
    section_name: General Authenticator Requirements
    req_id: V2.2.1
    req_description: Verify that anti-automation controls are effective at mitigating breached credential testing, brute force, and account lockout attacks. Such controls include blocking the most common breached passwords, soft lockouts, rate limiting, CAPTCHA, ever increasing delays between attempts, IP address restrictions, or risk-based restrictions such as location, first login on a device, recent attempts to unlock the account, or similar. Verify that no more than 100 failed attempts per hour is possible on a single account.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 307
    nist: 5.2.2 / 5.1.1.2 / 5.1.4.2 / 5.1.5.2
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.2
    section_name: General Authenticator Requirements
    req_id: V2.2.2
    req_description: Verify that the use of weak authenticators (such as SMS and email) is limited to secondary verification and transaction approval and not as a replacement for more secure authentication methods. Verify that stronger methods are offered before weak methods, users are aware of the risks, or that proper measures are in place to limit the risks of account compromise.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 304
    nist: 5.2.10
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.2
    section_name: General Authenticator Requirements
    req_id: V2.2.3
    req_description: Verify that secure notifications are sent to users after updates to authentication details, such as credential resets, email or address changes, logging in from unknown or risky locations. The use of push notifications - rather than SMS or email - is preferred, but in the absence of push notifications, SMS or email is acceptable as long as no sensitive information is disclosed in the notification.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 620
    nist:
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.2
    section_name: General Authenticator Requirements
    req_id: V2.2.4
    req_description: Verify impersonation resistance against phishing, such as the use of multi-factor authentication, cryptographic devices with intent (such as connected keys with a push to authenticate), or at higher AAL levels, client-side certificates.
    level1:
    level2:
    level3: ✓
    cwe: 308
    nist: 5.2.5
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.2
    section_name: General Authenticator Requirements
    req_id: V2.2.5
    req_description: Verify that where a Credential Service Provider (CSP) and the application verifying authentication are separated, mutually authenticated TLS is in place between the two endpoints.
    level1:
    level2:
    level3: ✓
    cwe: 319
    nist: 5.2.6
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.2
    section_name: General Authenticator Requirements
    req_id: V2.2.6
    req_description: Verify replay resistance through the mandated use of One-time Passwords (OTP) devices, cryptographic authenticators, or lookup codes.
    level1:
    level2:
    level3: ✓
    cwe: 308
    nist: 5.2.8
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.2
    section_name: General Authenticator Requirements
    req_id: V2.2.7
    req_description: Verify intent to authenticate by requiring the entry of an OTP token or user-initiated action such as a button press on a FIDO hardware key.
    level1:
    level2:
    level3: ✓
    cwe: 308
    nist: 5.2.9
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.3
    section_name: Authenticator Lifecycle Requirements
    req_id: V2.3.1
    req_description: Verify system generated initial passwords or activation codes SHOULD be securely randomly generated, SHOULD be at least 6 characters long, and MAY contain letters and numbers, and expire after a short period of time. These initial secrets must not be permitted to become the long term password.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 330
    nist: 5.1.1.2 / A.3
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.3
    section_name: Authenticator Lifecycle Requirements
    req_id: V2.3.2
    req_description: Verify that enrollment and use of subscriber-provided authentication devices are supported, such as a U2F or FIDO tokens.
    level1:
    level2: ✓
    level3: ✓
    cwe: 308
    nist: 6.1.3
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.3
    section_name: Authenticator Lifecycle Requirements
    req_id: V2.3.3
    req_description: Verify that renewal instructions are sent with sufficient time to renew time bound authenticators.
    level1:
    level2: ✓
    level3: ✓
    cwe: 287
    nist: 6.1.4
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.4
    section_name: Credential Storage Requirements
    req_id: V2.4.1
    req_description: Verify that passwords are stored in a form that is resistant to offline attacks. Passwords SHALL be salted and hashed using an approved one-way key derivation or password hashing function. Key derivation and password hashing functions take a password, a salt, and a cost factor as inputs when generating a password hash. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 916
    nist: 5.1.1.2
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.4
    section_name: Credential Storage Requirements
    req_id: V2.4.2
    req_description: Verify that the salt is at least 32 bits in length and be chosen arbitrarily to minimize salt value collisions among stored hashes. For each credential, a unique salt value and the resulting hash SHALL be stored. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 916
    nist: 5.1.1.2
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.4
    section_name: Credential Storage Requirements
    req_id: V2.4.3
    req_description: Verify that if PBKDF2 is used, the iteration count SHOULD be as large as verification server performance will allow, typically at least 100,000 iterations. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 916
    nist: 5.1.1.2
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.4
    section_name: Credential Storage Requirements
    req_id: V2.4.4
    req_description: Verify that if bcrypt is used, the work factor SHOULD be as large as verification server performance will allow, typically at least 13. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 916
    nist: 5.1.1.2
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.4
    section_name: Credential Storage Requirements
    req_id: V2.4.5
    req_description: Verify that an additional iteration of a key derivation function is performed, using a salt value that is secret and known only to the verifier. Generate the salt value using an approved random bit generator [SP 800-90Ar1] and provide at least the minimum security strength specified in the latest revision of SP 800-131A. The secret salt value SHALL be stored separately from the hashed passwords (e.g., in a specialized device like a hardware security module).
    level1:
    level2: ✓
    level3: ✓
    cwe: 916
    nist: 5.1.1.2
    units:
        -
            unit: ''
            terms: ''
            level: 
    actions:
        -
            action: ''
            level: 
            mappings:
                -
    notes: ''
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.5
    section_name: Credential Recovery Requirements
    req_id: V2.5.1
    req_description: Verify that a system generated initial activation or recovery secret is not sent in clear text to the user. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 640
    nist: 5.1.1.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.5
    section_name: Credential Recovery Requirements
    req_id: V2.5.2
    req_description: Verify password hints or knowledge-based authentication (so-called "secret questions") are not present.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 640
    nist: 5.1.1.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.5
    section_name: Credential Recovery Requirements
    req_id: V2.5.3
    req_description: Verify password credential recovery does not reveal the current password in any way. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 640
    nist: 5.1.1.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.5
    section_name: Credential Recovery Requirements
    req_id: V2.5.4
    req_description: Verify shared or default accounts are not present (e.g. "root", "admin", or "sa").
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 16
    nist: 5.1.1.2 / A.3
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.5
    section_name: Credential Recovery Requirements
    req_id: V2.5.5
    req_description: Verify that if an authentication factor is changed or replaced, that the user is notified of this event.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 304
    nist: 6.1.2.3
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.5
    section_name: Credential Recovery Requirements
    req_id: V2.5.6
    req_description: Verify forgotten password, and other recovery paths use a secure recovery mechanism, such as time-based OTP (TOTP) or other soft token, mobile push, or another offline recovery mechanism. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 640
    nist: 5.1.1.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.5
    section_name: Credential Recovery Requirements
    req_id: V2.5.7
    req_description: Verify that if OTP or multi-factor authentication factors are lost, that evidence of identity proofing is performed at the same level as during enrollment.
    level1:
    level2: ✓
    level3: ✓
    cwe: 308
    nist: 6.1.2.3
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.6
    section_name: Look-up Secret Verifier Requirements
    req_id: V2.6.1
    req_description: Verify that lookup secrets can be used only once.
    level1:
    level2: ✓
    level3: ✓
    cwe: 308
    nist: 5.1.2.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.6
    section_name: Look-up Secret Verifier Requirements
    req_id: V2.6.2
    req_description: Verify that lookup secrets have sufficient randomness (112 bits of entropy), or if less than 112 bits of entropy, salted with a unique and random 32-bit salt and hashed with an approved one-way hash.
    level1:
    level2: ✓
    level3: ✓
    cwe: 330
    nist: 5.1.2.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.6
    section_name: Look-up Secret Verifier Requirements
    req_id: V2.6.3
    req_description: Verify that lookup secrets are resistant to offline attacks, such as predictable values.
    level1:
    level2: ✓
    level3: ✓
    cwe: 310
    nist: 5.1.2.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.7
    section_name: Out of Band Verifier Requirements
    req_id: V2.7.1
    req_description: Verify that clear text out of band (NIST "restricted") authenticators, such as SMS or PSTN, are not offered by default, and stronger alternatives such as push notifications are offered first.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 287
    nist: 5.1.3.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.7
    section_name: Out of Band Verifier Requirements
    req_id: V2.7.2
    req_description: Verify that the out of band verifier expires out of band authentication requests, codes, or tokens after 10 minutes.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 287
    nist: 5.1.3.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.7
    section_name: Out of Band Verifier Requirements
    req_id: V2.7.3
    req_description: Verify that the out of band verifier authentication requests, codes, or tokens are only usable once, and only for the original authentication request.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 287
    nist: 5.1.3.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.7
    section_name: Out of Band Verifier Requirements
    req_id: V2.7.4
    req_description: Verify that the out of band authenticator and verifier communicates over a secure independent channel.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 523
    nist: 5.1.3.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.7
    section_name: Out of Band Verifier Requirements
    req_id: V2.7.5
    req_description: Verify that the out of band verifier retains only a hashed version of the authentication code.
    level1:
    level2: ✓
    level3: ✓
    cwe: 256
    nist: 5.1.3.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.7
    section_name: Out of Band Verifier Requirements
    req_id: V2.7.6
    req_description: Verify that the initial authentication code is generated by a secure random number generator, containing at least 20 bits of entropy (typically a six digital random number is sufficient).
    level1:
    level2: ✓
    level3: ✓
    cwe: 310
    nist: 5.1.3.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.8
    section_name: Single or Multi-factor One Time Verifier Requirements
    req_id: V2.8.1
    req_description: Verify that time-based OTPs have a defined lifetime before expiring.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 613
    nist: 5.1.4.2 / 5.1.5.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.8
    section_name: Single or Multi-factor One Time Verifier Requirements
    req_id: V2.8.2
    req_description: Verify that symmetric keys used to verify submitted OTPs are highly protected, such as by using a hardware security module or secure operating system based key storage.
    level1:
    level2: ✓
    level3: ✓
    cwe: 320
    nist: 5.1.4.2 / 5.1.5.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.8
    section_name: Single or Multi-factor One Time Verifier Requirements
    req_id: V2.8.3
    req_description: Verify that approved cryptographic algorithms are used in the generation, seeding, and verification of OTPs.
    level1:
    level2: ✓
    level3: ✓
    cwe: 326
    nist: 5.1.4.2 / 5.1.5.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.8
    section_name: Single or Multi-factor One Time Verifier Requirements
    req_id: V2.8.4
    req_description: Verify that time-based OTP can be used only once within the validity period.
    level1:
    level2: ✓
    level3: ✓
    cwe: 287
    nist: 5.1.4.2 / 5.1.5.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.8
    section_name: Single or Multi-factor One Time Verifier Requirements
    req_id: V2.8.5
    req_description: Verify that if a time-based multi-factor OTP token is re-used during the validity period, it is logged and rejected with secure notifications being sent to the holder of the device.
    level1:
    level2: ✓
    level3: ✓
    cwe: 287
    nist: 5.1.5.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.8
    section_name: Single or Multi-factor One Time Verifier Requirements
    req_id: V2.8.6
    req_description: Verify physical single-factor OTP generator can be revoked in case of theft or other loss. Ensure that revocation is immediately effective across logged in sessions, regardless of location.
    level1:
    level2: ✓
    level3: ✓
    cwe: 613
    nist: 5.2.1
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.8
    section_name: Single or Multi-factor One Time Verifier Requirements
    req_id: V2.8.7
    req_description: Verify that biometric authenticators are limited to use only as secondary factors in conjunction with either something you have and something you know.
    level1:
    level2: o
    level3: ✓
    cwe: 308
    nist: 5.2.3
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.9
    section_name: Cryptographic Software and Devices Verifier Requirements
    req_id: V2.9.1
    req_description: Verify that cryptographic keys used in verification are stored securely and protected against disclosure, such as using a Trusted Platform Module (TPM) or Hardware Security Module (HSM), or an OS service that can use this secure storage.
    level1:
    level2: ✓
    level3: ✓
    cwe: 320
    nist: 5.1.7.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.9
    section_name: Cryptographic Software and Devices Verifier Requirements
    req_id: V2.9.2
    req_description: Verify that the challenge nonce is at least 64 bits in length, and statistically unique or unique over the lifetime of the cryptographic device.
    level1:
    level2: ✓
    level3: ✓
    cwe: 330
    nist: 5.1.7.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.9
    section_name: Cryptographic Software and Devices Verifier Requirements
    req_id: V2.9.3
    req_description: Verify that approved cryptographic algorithms are used in the generation, seeding, and verification.
    level1:
    level2: ✓
    level3: ✓
    cwe: 327
    nist: 5.1.7.2
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.10
    section_name: Service Authentication Requirements
    req_id: V2.10.1
    req_description: Verify that intra-service secrets do not rely on unchanging credentials such as passwords, API keys or shared accounts with privileged access.
    level1:
    level2: OS assisted
    level3: HSM
    cwe: 287
    nist: 5.1.1.1
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.10
    section_name: Service Authentication Requirements
    req_id: V2.10.2
    req_description: Verify that if passwords are required for service authentication, the service account used is not a default credential. (e.g. root/root or admin/admin are default in some services during installation).
    level1:
    level2: OS assisted
    level3: HSM
    cwe: 255
    nist: 5.1.1.1
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.10
    section_name: Service Authentication Requirements
    req_id: V2.10.3
    req_description: Verify that passwords are stored with sufficient protection to prevent offline recovery attacks, including local system access.
    level1:
    level2: OS assisted
    level3: HSM
    cwe: 522
    nist: 5.1.1.1
-
    chapter_id: V2
    module: Authentication
    chapter_name: Authentication Verification Requirements
    section_id: V2.10
    section_name: Service Authentication Requirements
    req_id: V2.10.4
    req_description: Verify passwords, integrations with databases and third-party systems, seeds and internal secrets, and API keys are managed securely and not included in the source code or stored within source code repositories. Such storage SHOULD resist offline attacks. The use of a secure software key store (L1), hardware TPM, or an HSM (L3) is recommended for password storage.
    level1:
    level2: OS assisted
    level3: HSM
    cwe: 798
    nist:
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.1
    section_name: Fundamental Session Management Requirements
    req_id: V3.1.1
    req_description: Verify the application never reveals session tokens in URL parameters.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 598
    nist:
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.2
    section_name: Session Binding Requirements
    req_id: V3.2.1
    req_description: Verify the application generates a new session token on user authentication. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 384
    nist: 7.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.2
    section_name: Session Binding Requirements
    req_id: V3.2.2
    req_description: Verify that session tokens possess at least 64 bits of entropy. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 331
    nist: 7.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.2
    section_name: Session Binding Requirements
    req_id: V3.2.3
    req_description: Verify the application only stores session tokens in the browser using secure methods such as appropriately secured cookies (see section 3.4) or HTML 5 session storage.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 539
    nist: 7.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.2
    section_name: Session Binding Requirements
    req_id: V3.2.4
    req_description: Verify that session token are generated using approved cryptographic algorithms. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 331
    nist: 7.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.3
    section_name: Session Logout and Timeout Requirements
    req_id: V3.3.1
    req_description: Verify that logout and expiration invalidate the session token, such that the back button or a downstream relying party does not resume an authenticated session, including across relying parties. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 613
    nist: 7.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.3
    section_name: Session Logout and Timeout Requirements
    req_id: V3.3.2
    req_description: If authenticators permit users to remain logged in, verify that re-authentication occurs periodically both when actively used or after an idle period. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: 30 days
    level2: 12 hours or 30 minutes of inactivity, 2FA optional
    level3: 12 hours or 15 minutes of inactivity, with 2FA
    cwe: 613
    nist: 7.2
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.3
    section_name: Session Logout and Timeout Requirements
    req_id: V3.3.3
    req_description: Verify that the application gives the option to terminate all other active sessions after a successful password change (including change via password reset/recovery), and that this is effective across the application, federated login (if present), and any relying parties.
    level1:
    level2: ✓
    level3: ✓
    cwe: 613
    nist:
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.3
    section_name: Session Logout and Timeout Requirements
    req_id: V3.3.4
    req_description: Verify that users are able to view and (having re-entered login credentials) log out of any or all currently active sessions and devices.
    level1:
    level2: ✓
    level3: ✓
    cwe: 613
    nist: 7.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.4
    section_name: Cookie-based Session Management
    req_id: V3.4.1
    req_description: 'Verify that cookie-based session tokens have the ''Secure'' attribute set. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 614
    nist: 7.1.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.4
    section_name: Cookie-based Session Management
    req_id: V3.4.2
    req_description: 'Verify that cookie-based session tokens have the ''HttpOnly'' attribute set. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 1004
    nist: 7.1.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.4
    section_name: Cookie-based Session Management
    req_id: V3.4.3
    req_description: 'Verify that cookie-based session tokens utilize the ''SameSite'' attribute to limit exposure to cross-site request forgery attacks. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 16
    nist: 7.1.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.4
    section_name: Cookie-based Session Management
    req_id: V3.4.4
    req_description: Verify that cookie-based session tokens use "__Host-" prefix (see references) to provide session cookie confidentiality.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 16
    nist: 7.1.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.4
    section_name: Cookie-based Session Management
    req_id: V3.4.5
    req_description: Verify that if the application is published under a domain name with other applications that set or use session cookies that might override or disclose the session cookies, set the path attribute in cookie-based session tokens using the most precise path possible. ([C6](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 16
    nist: 7.1.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.5
    section_name: Token-based Session Management
    req_id: V3.5.1
    req_description: Verify the application allows users to revoke OAuth tokens that form trust relationships with linked applications.
    level1:
    level2: ✓
    level3: ✓
    cwe: 290
    nist: 7.1.2
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.5
    section_name: Token-based Session Management
    req_id: V3.5.2
    req_description: Verify the application uses session tokens rather than static API secrets and keys, except with legacy implementations.
    level1:
    level2: ✓
    level3: ✓
    cwe: 798
    nist:
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.5
    section_name: Token-based Session Management
    req_id: V3.5.3
    req_description: Verify that stateless session tokens use digital signatures, encryption, and other countermeasures to protect against tampering, enveloping, replay, null cipher, and key substitution attacks.
    level1:
    level2: ✓
    level3: ✓
    cwe: 345
    nist:
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.6
    section_name: Re-authentication from a Federation or Assertion
    req_id: V3.6.1
    req_description: 'Verify that relying parties specify the maximum authentication time to Credential Service Providers (CSPs) and that CSPs re-authenticate the subscriber if they haven''t used a session within that period.'
    level1:
    level2:
    level3: ✓
    cwe: 613
    nist: 7.2.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.6
    section_name: Re-authentication from a Federation or Assertion
    req_id: V3.6.2
    req_description: Verify that Credential Service Providers (CSPs) inform Relying Parties (RPs) of the last authentication event, to allow RPs to determine if they need to re-authenticate the user.
    level1:
    level2:
    level3: ✓
    cwe: 613
    nist: 7.2.1
-
    chapter_id: V3
    module: Session Management
    chapter_name: Session Management Verification Requirements
    section_id: V3.7
    section_name: Defenses Against Session Management Exploits
    req_id: V3.7.1
    req_description: Verify the application ensures a full, valid login session or requires re-authentication or secondary verification before allowing any sensitive transactions or account modifications.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 306
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.1
    section_name: General Access Control Design
    req_id: V4.1.1
    req_description: Verify that the application enforces access control rules on a trusted service layer, especially if client-side access control is present and could be bypassed.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 602
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.1
    section_name: General Access Control Design
    req_id: V4.1.2
    req_description: Verify that all user and data attributes and policy information used by access controls cannot be manipulated by end users unless specifically authorized.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 639
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.1
    section_name: General Access Control Design
    req_id: V4.1.3
    req_description: Verify that the principle of least privilege exists - users should only be able to access functions, data files, URLs, controllers, services, and other resources, for which they possess specific authorization. This implies protection against spoofing and elevation of privilege. ([C7](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 285
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.1
    section_name: General Access Control Design
    req_id: V4.1.4
    req_description: Verify that the principle of deny by default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.  ([C7](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 276
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.1
    section_name: General Access Control Design
    req_id: V4.1.5
    req_description: Verify that access controls fail securely including when an exception occurs. ([C10](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 285
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.2
    section_name: Operation Level Access Control
    req_id: V4.2.1
    req_description: 'Verify that sensitive data and APIs are protected against Insecure Direct Object Reference (IDOR) attacks targeting creation, reading, updating and deletion of records, such as creating or updating someone else''s record, viewing everyone''s records, or deleting all records.'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 639
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.2
    section_name: Operation Level Access Control
    req_id: V4.2.2
    req_description: Verify that the application or framework enforces a strong anti-CSRF mechanism to protect authenticated functionality, and effective anti-automation or anti-CSRF protects unauthenticated functionality.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 352
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.3
    section_name: Other Access Control Considerations
    req_id: V4.3.1
    req_description: Verify administrative interfaces use appropriate multi-factor authentication to prevent unauthorized use.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 419
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.3
    section_name: Other Access Control Considerations
    req_id: V4.3.2
    req_description: Verify that directory browsing is disabled unless deliberately desired. Additionally, applications should not allow discovery or disclosure of file or directory metadata, such as Thumbs.db, .DS_Store, .git or .svn folders.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 548
    nist:
-
    chapter_id: V4
    module: Authorization
    chapter_name: Access Control Verification Requirements
    section_id: V4.3
    section_name: Other Access Control Considerations
    req_id: V4.3.3
    req_description: Verify the application has additional authorization (such as step up or adaptive authentication) for lower value systems, and / or segregation of duties for high value applications to enforce anti-fraud controls as per the risk of application and past fraud.
    level1:
    level2: ✓
    level3: ✓
    cwe: 732
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.1
    section_name: Input Validation Requirements
    req_id: V5.1.1
    req_description: Verify that the application has defenses against HTTP parameter pollution attacks, particularly if the application framework makes no distinction about the source of request parameters (GET, POST, cookies, headers, or environment variables).
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 235
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.1
    section_name: Input Validation Requirements
    req_id: V5.1.2
    req_description: Verify that frameworks protect against mass parameter assignment attacks, or that the application has countermeasures to protect against unsafe parameter assignment, such as marking fields private or similar. ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 915
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.1
    section_name: Input Validation Requirements
    req_id: V5.1.3
    req_description: Verify that all input (HTML form fields, REST requests, URL parameters, HTTP headers, cookies, batch files, RSS feeds, etc) is validated using positive validation (allow lists). ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 20
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.1
    section_name: Input Validation Requirements
    req_id: V5.1.4
    req_description: Verify that structured data is strongly typed and validated against a defined schema including allowed characters, length and pattern (e.g. credit card numbers or telephone, or validating that two related fields are reasonable, such as checking that suburb and zip/postcode match). ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 20
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.1
    section_name: Input Validation Requirements
    req_id: V5.1.5
    req_description: Verify that URL redirects and forwards only allow destinations which appear on an allow list, or show a warning when redirecting to potentially untrusted content.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 601
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.2
    section_name: Sanitization and Sandboxing Requirements
    req_id: V5.2.1
    req_description: Verify that all untrusted HTML input from WYSIWYG editors or similar is properly sanitized with an HTML sanitizer library or framework feature. ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 116
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.2
    section_name: Sanitization and Sandboxing Requirements
    req_id: V5.2.2
    req_description: Verify that unstructured data is sanitized to enforce safety measures such as allowed characters and length.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 138
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.2
    section_name: Sanitization and Sandboxing Requirements
    req_id: V5.2.3
    req_description: Verify that the application sanitizes user input before passing to mail systems to protect against SMTP or IMAP injection.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 147
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.2
    section_name: Sanitization and Sandboxing Requirements
    req_id: V5.2.4
    req_description: Verify that the application avoids the use of eval() or other dynamic code execution features. Where there is no alternative, any user input being included must be sanitized or sandboxed before being executed.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 95
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.2
    section_name: Sanitization and Sandboxing Requirements
    req_id: V5.2.5
    req_description: Verify that the application protects against template injection attacks by ensuring that any user input being included is sanitized or sandboxed.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 94
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.2
    section_name: Sanitization and Sandboxing Requirements
    req_id: V5.2.6
    req_description: Verify that the application protects against SSRF attacks, by validating or sanitizing untrusted data or HTTP file metadata, such as filenames and URL input fields, and uses allow lists of protocols, domains, paths and ports.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 918
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.2
    section_name: Sanitization and Sandboxing Requirements
    req_id: V5.2.7
    req_description: Verify that the application sanitizes, disables, or sandboxes user-supplied Scalable Vector Graphics (SVG) scriptable content, especially as they relate to XSS resulting from inline scripts, and foreignObject.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 159
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.2
    section_name: Sanitization and Sandboxing Requirements
    req_id: V5.2.8
    req_description: Verify that the application sanitizes, disables, or sandboxes user-supplied scriptable or expression template language content, such as Markdown, CSS or XSL stylesheets, BBCode, or similar.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 94
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.1
    req_description: 'Verify that output encoding is relevant for the interpreter and context required. For example, use encoders specifically for HTML values, HTML attributes, JavaScript, URL parameters, HTTP headers, SMTP, and others as the context requires, especially from untrusted inputs (e.g. names with Unicode or apostrophes, such as ねこ or O''Hara). ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 116
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.2
    req_description: 'Verify that output encoding preserves the user''s chosen character set and locale, such that any Unicode character point is valid and safely handled. ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 176
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.3
    req_description: Verify that context-aware, preferably automated - or at worst, manual - output escaping protects against reflected, stored, and DOM based XSS. ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 79
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.4
    req_description: Verify that data selection or database queries (e.g. SQL, HQL, ORM, NoSQL) use parameterized queries, ORMs, entity frameworks, or are otherwise protected from database injection attacks. ([C3](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 89
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.5
    req_description: Verify that where parameterized or safer mechanisms are not present, context-specific output encoding is used to protect against injection attacks, such as the use of SQL escaping to protect against SQL injection. ([C3, C4](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 89
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.6
    req_description: Verify that the application protects against JavaScript or JSON injection attacks, including for eval attacks, remote JavaScript includes, Content Security Policy (CSP) bypasses, DOM XSS, and JavaScript expression evaluation. ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 830
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.7
    req_description: Verify that the application protects against LDAP injection vulnerabilities, or that specific security controls to prevent LDAP injection have been implemented. ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 90
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.8
    req_description: Verify that the application protects against OS command injection and that operating system calls use parameterized OS queries or use contextual command line output encoding. ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 78
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.9
    req_description: Verify that the application protects against Local File Inclusion (LFI) or Remote File Inclusion (RFI) attacks.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 829
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.3
    section_name: Output Encoding and Injection Prevention Requirements
    req_id: V5.3.10
    req_description: Verify that the application protects against XPath injection or XML injection attacks. ([C4](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 643
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.4
    section_name: Memory, String, and Unmanaged Code Requirements
    req_id: V5.4.1
    req_description: Verify that the application uses memory-safe string, safer memory copy and pointer arithmetic to detect or prevent stack, buffer, or heap overflows.
    level1:
    level2: ✓
    level3: ✓
    cwe: 120
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.4
    section_name: Memory, String, and Unmanaged Code Requirements
    req_id: V5.4.2
    req_description: Verify that format strings do not take potentially hostile input, and are constant.
    level1:
    level2: ✓
    level3: ✓
    cwe: 134
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.4
    section_name: Memory, String, and Unmanaged Code Requirements
    req_id: V5.4.3
    req_description: Verify that sign, range, and input validation techniques are used to prevent integer overflows.
    level1:
    level2: ✓
    level3: ✓
    cwe: 190
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.5
    section_name: Deserialization Prevention Requirements
    req_id: V5.5.1
    req_description: Verify that serialized objects use integrity checks or are encrypted to prevent hostile object creation or data tampering. ([C5](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 502
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.5
    section_name: Deserialization Prevention Requirements
    req_id: V5.5.2
    req_description: Verify that the application correctly restricts XML parsers to only use the most restrictive configuration possible and to ensure that unsafe features such as resolving external entities are disabled to prevent XML eXternal Entity (XXE) attacks.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 611
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.5
    section_name: Deserialization Prevention Requirements
    req_id: V5.5.3
    req_description: Verify that deserialization of untrusted data is avoided or is protected in both custom code and third-party libraries (such as JSON, XML and YAML parsers).
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 502
    nist:
-
    chapter_id: V5
    module: Data Validation and Encoding
    chapter_name: Validation, Sanitization and Encoding Verification Requirements
    section_id: V5.5
    section_name: Deserialization Prevention Requirements
    req_id: V5.5.4
    req_description: Verify that when parsing JSON in browsers or JavaScript-based backends, JSON.parse is used to parse the JSON document. Do not use eval() to parse JSON.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 95
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.1
    section_name: Data Classification
    req_id: V6.1.1
    req_description: 'Verify that regulated private data is stored encrypted while at rest, such as Personally Identifiable Information (PII), sensitive personal information, or data assessed likely to be subject to EU''s GDPR.'
    level1:
    level2: ✓
    level3: ✓
    cwe: 311
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.1
    section_name: Data Classification
    req_id: V6.1.2
    req_description: Verify that regulated health data is stored encrypted while at rest, such as medical records, medical device details, or de-anonymized research records.
    level1:
    level2: ✓
    level3: ✓
    cwe: 311
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.1
    section_name: Data Classification
    req_id: V6.1.3
    req_description: Verify that regulated financial data is stored encrypted while at rest, such as financial accounts, defaults or credit history, tax records, pay history, beneficiaries, or de-anonymized market or research records.
    level1:
    level2: ✓
    level3: ✓
    cwe: 311
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.2
    section_name: Algorithms
    req_id: V6.2.1
    req_description: Verify that all cryptographic modules fail securely, and errors are handled in a way that does not enable Padding Oracle attacks.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 310
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.2
    section_name: Algorithms
    req_id: V6.2.2
    req_description: Verify that industry proven or government approved cryptographic algorithms, modes, and libraries are used, instead of custom coded cryptography. ([C8](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 327
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.2
    section_name: Algorithms
    req_id: V6.2.3
    req_description: Verify that encryption initialization vector, cipher configuration, and block modes are configured securely using the latest advice.
    level1:
    level2: ✓
    level3: ✓
    cwe: 326
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.2
    section_name: Algorithms
    req_id: V6.2.4
    req_description: Verify that random number, encryption or hashing algorithms, key lengths, rounds, ciphers or modes, can be reconfigured, upgraded, or swapped at any time, to protect against cryptographic breaks. ([C8](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 326
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.2
    section_name: Algorithms
    req_id: V6.2.5
    req_description: Verify that known insecure block modes (i.e. ECB, etc.), padding modes (i.e. PKCS#1 v1.5, etc.), ciphers with small block sizes (i.e. Triple-DES, Blowfish, etc.), and weak hashing algorithms (i.e. MD5, SHA1, etc.) are not used unless required for backwards compatibility.
    level1:
    level2: ✓
    level3: ✓
    cwe: 326
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.2
    section_name: Algorithms
    req_id: V6.2.6
    req_description: Verify that nonces, initialization vectors, and other single use numbers must not be used more than once with a given encryption key. The method of generation must be appropriate for the algorithm being used.
    level1:
    level2: ✓
    level3: ✓
    cwe: 326
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.2
    section_name: Algorithms
    req_id: V6.2.7
    req_description: Verify that encrypted data is authenticated via signatures, authenticated cipher modes, or HMAC to ensure that ciphertext is not altered by an unauthorized party.
    level1:
    level2:
    level3: ✓
    cwe: 326
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.2
    section_name: Algorithms
    req_id: V6.2.8
    req_description: 'Verify that all cryptographic operations are constant-time, with no ''short-circuit'' operations in comparisons, calculations, or returns, to avoid leaking information.'
    level1:
    level2:
    level3: ✓
    cwe: 385
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.3
    section_name: Random Values
    req_id: V6.3.1
    req_description: 'Verify that all random numbers, random file names, random GUIDs, and random strings are generated using the cryptographic module''s approved cryptographically secure random number generator when these random values are intended to be not guessable by an attacker.'
    level1:
    level2: ✓
    level3: ✓
    cwe: 338
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.3
    section_name: Random Values
    req_id: V6.3.2
    req_description: Verify that random GUIDs are created using the GUID v4 algorithm, and a Cryptographically-secure Pseudo-random Number Generator (CSPRNG). GUIDs created using other pseudo-random number generators may be predictable.
    level1:
    level2: ✓
    level3: ✓
    cwe: 338
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.3
    section_name: Random Values
    req_id: V6.3.3
    req_description: Verify that random numbers are created with proper entropy even when the application is under heavy load, or that the application degrades gracefully in such circumstances.
    level1:
    level2:
    level3: ✓
    cwe: 338
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.4
    section_name: Secret Management
    req_id: V6.4.1
    req_description: Verify that a secrets management solution such as a key vault is used to securely create, store, control access to and destroy secrets. ([C8](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 798
    nist:
-
    chapter_id: V6
    module: Cryptography
    chapter_name: Stored Cryptography Verification Requirements
    section_id: V6.4
    section_name: Secret Management
    req_id: V6.4.2
    req_description: Verify that key material is not exposed to the application but instead uses an isolated security module like a vault for cryptographic operations. ([C8](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 320
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.1
    section_name: Log Content Requirements
    req_id: V7.1.1
    req_description: Verify that the application does not log credentials or payment details. Session tokens should only be stored in logs in an irreversible, hashed form. ([C9, C10](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 532
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.1
    section_name: Log Content Requirements
    req_id: V7.1.2
    req_description: Verify that the application does not log other sensitive data as defined under local privacy laws or relevant security policy. ([C9](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 532
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.1
    section_name: Log Content Requirements
    req_id: V7.1.3
    req_description: Verify that the application logs security relevant events including successful and failed authentication events, access control failures, deserialization failures and input validation failures. ([C5, C7](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 778
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.1
    section_name: Log Content Requirements
    req_id: V7.1.4
    req_description: Verify that each log event includes necessary information that would allow for a detailed investigation of the timeline when an event happens. ([C9](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 778
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.2
    section_name: Log Processing Requirements
    req_id: V7.2.1
    req_description: Verify that all authentication decisions are logged, without storing sensitive session tokens or passwords. This should include requests with relevant metadata needed for security investigations.
    level1:
    level2: ✓
    level3: ✓
    cwe: 778
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.2
    section_name: Log Processing Requirements
    req_id: V7.2.2
    req_description: Verify that all access control decisions can be logged and all failed decisions are logged. This should include requests with relevant metadata needed for security investigations.
    level1:
    level2: ✓
    level3: ✓
    cwe: 285
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.3
    section_name: Log Protection Requirements
    req_id: V7.3.1
    req_description: Verify that the application appropriately encodes user-supplied data to prevent log injection. ([C9](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 117
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.3
    section_name: Log Protection Requirements
    req_id: V7.3.2
    req_description: Verify that all events are protected from injection when viewed in log viewing software. ([C9](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 117
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.3
    section_name: Log Protection Requirements
    req_id: V7.3.3
    req_description: Verify that security logs are protected from unauthorized access and modification. ([C9](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 200
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.3
    section_name: Log Protection Requirements
    req_id: V7.3.4
    req_description: Verify that time sources are synchronized to the correct time and time zone. Strongly consider logging only in UTC if systems are global to assist with post-incident forensic analysis. ([C9](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe:
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.4
    section_name: Error Handling
    req_id: V7.4.1
    req_description: Verify that a generic message is shown when an unexpected or security sensitive error occurs, potentially with a unique ID which support personnel can use to investigate.  ([C10](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 210
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.4
    section_name: Error Handling
    req_id: V7.4.2
    req_description: Verify that exception handling (or a functional equivalent) is used across the codebase to account for expected and unexpected error conditions. ([C10](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 544
    nist:
-
    chapter_id: V7
    module: Logging and Monitoring
    chapter_name: Error Handling and Logging Verification Requirements
    section_id: V7.4
    section_name: Error Handling
    req_id: V7.4.3
    req_description: Verify that a "last resort" error handler is defined which will catch all unhandled exceptions. ([C10](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 431
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.1
    section_name: General Data Protection
    req_id: V8.1.1
    req_description: Verify the application protects sensitive data from being cached in server components such as load balancers and application caches.
    level1:
    level2: ✓
    level3: ✓
    cwe: 524
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.1
    section_name: General Data Protection
    req_id: V8.1.2
    req_description: Verify that all cached or temporary copies of sensitive data stored on the server are protected from unauthorized access or purged/invalidated after the authorized user accesses the sensitive data.
    level1:
    level2: ✓
    level3: ✓
    cwe: 524
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.1
    section_name: General Data Protection
    req_id: V8.1.3
    req_description: Verify the application minimizes the number of parameters in a request, such as hidden fields, Ajax variables, cookies and header values.
    level1:
    level2: ✓
    level3: ✓
    cwe: 233
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.1
    section_name: General Data Protection
    req_id: V8.1.4
    req_description: Verify the application can detect and alert on abnormal numbers of requests, such as by IP, user, total per hour or day, or whatever makes sense for the application.
    level1:
    level2: ✓
    level3: ✓
    cwe: 770
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.1
    section_name: General Data Protection
    req_id: V8.1.5
    req_description: Verify that regular backups of important data are performed and that test restoration of data is performed.
    level1:
    level2:
    level3: ✓
    cwe: 19
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.1
    section_name: General Data Protection
    req_id: V8.1.6
    req_description: Verify that backups are stored securely to prevent data from being stolen or corrupted.
    level1:
    level2:
    level3: ✓
    cwe: 19
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.2
    section_name: Client-side Data Protection
    req_id: V8.2.1
    req_description: Verify the application sets sufficient anti-caching headers so that sensitive data is not cached in modern browsers.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 525
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.2
    section_name: Client-side Data Protection
    req_id: V8.2.2
    req_description: Verify that data stored in browser storage (such as HTML5 local storage, session storage, IndexedDB, or cookies) does not contain sensitive data or PII.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 922
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.2
    section_name: Client-side Data Protection
    req_id: V8.2.3
    req_description: Verify that authenticated data is cleared from client storage, such as the browser DOM, after the client or session is terminated.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 922
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.3
    section_name: Sensitive Private Data
    req_id: V8.3.1
    req_description: Verify that sensitive data is sent to the server in the HTTP message body or headers, and that query string parameters from any HTTP verb do not contain sensitive data.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 319
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.3
    section_name: Sensitive Private Data
    req_id: V8.3.2
    req_description: Verify that users have a method to remove or export their data on demand.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 212
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.3
    section_name: Sensitive Private Data
    req_id: V8.3.3
    req_description: Verify that users are provided clear language regarding collection and use of supplied personal information and that users have provided opt-in consent for the use of that data before it is used in any way.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 285
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.3
    section_name: Sensitive Private Data
    req_id: V8.3.4
    req_description: Verify that all sensitive data created and processed by the application has been identified, and ensure that a policy is in place on how to deal with sensitive data. ([C8](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 200
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.3
    section_name: Sensitive Private Data
    req_id: V8.3.5
    req_description: Verify accessing sensitive data is audited (without logging the sensitive data itself), if the data is collected under relevant data protection directives or where logging of access is required.
    level1:
    level2: ✓
    level3: ✓
    cwe: 532
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.3
    section_name: Sensitive Private Data
    req_id: V8.3.6
    req_description: Verify that sensitive information contained in memory is overwritten as soon as it is no longer required to mitigate memory dumping attacks, using zeroes or random data.
    level1:
    level2: ✓
    level3: ✓
    cwe: 226
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.3
    section_name: Sensitive Private Data
    req_id: V8.3.7
    req_description: Verify that sensitive or private information that is required to be encrypted, is encrypted using approved algorithms that provide both confidentiality and integrity. ([C8](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 327
    nist:
-
    chapter_id: V8
    module: Securing Data at Rest
    chapter_name: Data Protection Verification Requirements
    section_id: V8.3
    section_name: Sensitive Private Data
    req_id: V8.3.8
    req_description: Verify that sensitive personal information is subject to data retention classification, such that old or out of date data is deleted automatically, on a schedule, or as the situation requires.
    level1:
    level2: ✓
    level3: ✓
    cwe: 285
    nist:
-
    chapter_id: V9
    module: Network Security
    chapter_name: Communications Verification Requirements
    section_id: V9.1
    section_name: Client Communications Security Requirements
    req_id: V9.1.1
    req_description: Verify that secured TLS is used for all client connectivity, and does not fall back to insecure or unencrypted protocols. ([C8](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 319
    nist:
-
    chapter_id: V9
    module: Network Security
    chapter_name: Communications Verification Requirements
    section_id: V9.1
    section_name: Client Communications Security Requirements
    req_id: V9.1.2
    req_description: Verify using online or up to date TLS testing tools that only strong algorithms, ciphers, and protocols are enabled, with the strongest algorithms and ciphers set as preferred.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 326
    nist:
-
    chapter_id: V9
    module: Network Security
    chapter_name: Communications Verification Requirements
    section_id: V9.1
    section_name: Client Communications Security Requirements
    req_id: V9.1.3
    req_description: Verify that old versions of SSL and TLS protocols, algorithms, ciphers, and configuration are disabled, such as SSLv2, SSLv3, or TLS 1.0 and TLS 1.1. The latest version of TLS should be the preferred cipher suite.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 326
    nist:
-
    chapter_id: V9
    module: Network Security
    chapter_name: Communications Verification Requirements
    section_id: V9.2
    section_name: Server Communications Security Requirements
    req_id: V9.2.1
    req_description: Verify that connections to and from the server use trusted TLS certificates. Where internally generated or self-signed certificates are used, the server must be configured to only trust specific internal CAs and specific self-signed certificates. All others should be rejected.
    level1:
    level2: ✓
    level3: ✓
    cwe: 295
    nist:
-
    chapter_id: V9
    module: Network Security
    chapter_name: Communications Verification Requirements
    section_id: V9.2
    section_name: Server Communications Security Requirements
    req_id: V9.2.2
    req_description: Verify that encrypted communications such as TLS is used for all inbound and outbound connections, including for management ports, monitoring, authentication, API, or web service calls, database, cloud, serverless, mainframe, external, and partner connections. The server must not fall back to insecure or unencrypted protocols.
    level1:
    level2: ✓
    level3: ✓
    cwe: 319
    nist:
-
    chapter_id: V9
    module: Network Security
    chapter_name: Communications Verification Requirements
    section_id: V9.2
    section_name: Server Communications Security Requirements
    req_id: V9.2.3
    req_description: Verify that all encrypted connections to external systems that involve sensitive information or functions are authenticated.
    level1:
    level2: ✓
    level3: ✓
    cwe: 287
    nist:
-
    chapter_id: V9
    module: Network Security
    chapter_name: Communications Verification Requirements
    section_id: V9.2
    section_name: Server Communications Security Requirements
    req_id: V9.2.4
    req_description: Verify that proper certification revocation, such as Online Certificate Status Protocol (OCSP) Stapling, is enabled and configured.
    level1:
    level2: ✓
    level3: ✓
    cwe: 299
    nist:
-
    chapter_id: V9
    module: Network Security
    chapter_name: Communications Verification Requirements
    section_id: V9.2
    section_name: Server Communications Security Requirements
    req_id: V9.2.5
    req_description: Verify that backend TLS connection failures are logged.
    level1:
    level2:
    level3: ✓
    cwe: 544
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.1
    section_name: Code Integrity Controls
    req_id: V10.1.1
    req_description: Verify that a code analysis tool is in use that can detect potentially malicious code, such as time functions, unsafe file operations and network connections.
    level1:
    level2:
    level3: ✓
    cwe: 749
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.2
    section_name: Malicious Code Search
    req_id: V10.2.1
    req_description: 'Verify that the application source code and third party libraries do not contain unauthorized phone home or data collection capabilities. Where such functionality exists, obtain the user''s permission for it to operate  before collecting any data.'
    level1:
    level2: ✓
    level3: ✓
    cwe: 359
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.2
    section_name: Malicious Code Search
    req_id: V10.2.2
    req_description: Verify that the application does not ask for unnecessary or excessive permissions to privacy related features or sensors, such as contacts, cameras, microphones, or location.
    level1:
    level2: ✓
    level3: ✓
    cwe: 272
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.2
    section_name: Malicious Code Search
    req_id: V10.2.3
    req_description: Verify that the application source code and third party libraries do not contain back doors, such as hard-coded or additional undocumented accounts or keys, code obfuscation, undocumented binary blobs, rootkits, or anti-debugging, insecure debugging features, or otherwise out of date, insecure, or hidden functionality that could be used maliciously if discovered.
    level1:
    level2:
    level3: ✓
    cwe: 507
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.2
    section_name: Malicious Code Search
    req_id: V10.2.4
    req_description: Verify that the application source code and third party libraries do not contain time bombs by searching for date and time related functions.
    level1:
    level2:
    level3: ✓
    cwe: 511
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.2
    section_name: Malicious Code Search
    req_id: V10.2.5
    req_description: Verify that the application source code and third party libraries do not contain malicious code, such as salami attacks, logic bypasses, or logic bombs.
    level1:
    level2:
    level3: ✓
    cwe: 511
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.2
    section_name: Malicious Code Search
    req_id: V10.2.6
    req_description: Verify that the application source code and third party libraries do not contain Easter eggs or any other potentially unwanted functionality.
    level1:
    level2:
    level3: ✓
    cwe: 507
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.3
    section_name: Deployed Application Integrity Controls
    req_id: V10.3.1
    req_description: Verify that if the application has a client or server auto-update feature, updates should be obtained over secure channels and digitally signed. The update code must validate the digital signature of the update before installing or executing the update.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 16
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.3
    section_name: Deployed Application Integrity Controls
    req_id: V10.3.2
    req_description: Verify that the application employs integrity protections, such as code signing or subresource integrity. The application must not load or execute code from untrusted sources, such as loading includes, modules, plugins, code, or libraries from untrusted sources or the Internet.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 353
    nist:
-
    chapter_id: V10
    module: Building a Secure System
    chapter_name: Malicious Code Verification Requirements
    section_id: V10.3
    section_name: Deployed Application Integrity Controls
    req_id: V10.3.3
    req_description: Verify that the application has protection from subdomain takeovers if the application relies upon DNS entries or DNS subdomains, such as expired domain names, out of date DNS pointers or CNAMEs, expired projects at public source code repos, or transient cloud APIs, serverless functions, or storage buckets (*autogen-bucket-id*.cloud.example.com) or similar. Protections can include ensuring that DNS names used by applications are regularly checked for expiry or change.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 350
    nist:
-
    chapter_id: V11
    module: Building a Secure System
    chapter_name: Business Logic Verification Requirements
    section_id: V11.1
    section_name: Business Logic Security Requirements
    req_id: V11.1.1
    req_description: Verify the application will only process business logic flows for the same user in sequential step order and without skipping steps.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 841
    nist:
-
    chapter_id: V11
    module: Building a Secure System
    chapter_name: Business Logic Verification Requirements
    section_id: V11.1
    section_name: Business Logic Security Requirements
    req_id: V11.1.2
    req_description: Verify the application will only process business logic flows with all steps being processed in realistic human time, i.e. transactions are not submitted too quickly.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 799
    nist:
-
    chapter_id: V11
    module: Building a Secure System
    chapter_name: Business Logic Verification Requirements
    section_id: V11.1
    section_name: Business Logic Security Requirements
    req_id: V11.1.3
    req_description: Verify the application has appropriate limits for specific business actions or transactions which are correctly enforced on a per user basis.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 770
    nist:
-
    chapter_id: V11
    module: Building a Secure System
    chapter_name: Business Logic Verification Requirements
    section_id: V11.1
    section_name: Business Logic Security Requirements
    req_id: V11.1.4
    req_description: Verify the application has sufficient anti-automation controls to detect and protect against data exfiltration, excessive business logic requests, excessive file uploads or denial of service attacks.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 770
    nist:
-
    chapter_id: V11
    module: Building a Secure System
    chapter_name: Business Logic Verification Requirements
    section_id: V11.1
    section_name: Business Logic Security Requirements
    req_id: V11.1.5
    req_description: Verify the application has business logic limits or validation to protect against likely business risks or threats, identified using threat modeling or similar methodologies.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 841
    nist:
-
    chapter_id: V11
    module: Building a Secure System
    chapter_name: Business Logic Verification Requirements
    section_id: V11.1
    section_name: Business Logic Security Requirements
    req_id: V11.1.6
    req_description: Verify the application does not suffer from "Time Of Check to Time Of Use" (TOCTOU) issues or other race conditions for sensitive operations.
    level1:
    level2: ✓
    level3: ✓
    cwe: 367
    nist:
-
    chapter_id: V11
    module: Building a Secure System
    chapter_name: Business Logic Verification Requirements
    section_id: V11.1
    section_name: Business Logic Security Requirements
    req_id: V11.1.7
    req_description: Verify the application monitors for unusual events or activity from a business logic perspective. For example, attempts to perform actions out of order or actions which a normal user would never attempt. ([C9](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 754
    nist:
-
    chapter_id: V11
    module: Building a Secure System
    chapter_name: Business Logic Verification Requirements
    section_id: V11.1
    section_name: Business Logic Security Requirements
    req_id: V11.1.8
    req_description: Verify the application has configurable alerting when automated attacks or unusual activity is detected.
    level1:
    level2: ✓
    level3: ✓
    cwe: 390
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.1
    section_name: File Upload Requirements
    req_id: V12.1.1
    req_description: Verify that the application will not accept large files that could fill up storage or cause a denial of service.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 400
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.1
    section_name: File Upload Requirements
    req_id: V12.1.2
    req_description: Verify that compressed files are checked for "zip bombs" - small input files that will decompress into huge files thus exhausting file storage limits.
    level1:
    level2: ✓
    level3: ✓
    cwe: 409
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.1
    section_name: File Upload Requirements
    req_id: V12.1.3
    req_description: Verify that a file size quota and maximum number of files per user is enforced to ensure that a single user cannot fill up the storage with too many files, or excessively large files.
    level1:
    level2: ✓
    level3: ✓
    cwe: 770
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.2
    section_name: File Integrity Requirements
    req_id: V12.2.1
    req_description: 'Verify that files obtained from untrusted sources are validated to be of expected type based on the file''s content.'
    level1:
    level2: ✓
    level3: ✓
    cwe: 434
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.3
    section_name: File Execution Requirements
    req_id: V12.3.1
    req_description: Verify that user-submitted filename metadata is not used directly by system or framework filesystems and that a URL API is used to protect against path traversal.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 22
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.3
    section_name: File Execution Requirements
    req_id: V12.3.2
    req_description: Verify that user-submitted filename metadata is validated or ignored to prevent the disclosure, creation, updating or removal of local files (LFI).
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 73
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.3
    section_name: File Execution Requirements
    req_id: V12.3.3
    req_description: Verify that user-submitted filename metadata is validated or ignored to prevent the disclosure or execution of remote files via Remote File Inclusion (RFI) or Server-side Request Forgery (SSRF) attacks.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 98
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.3
    section_name: File Execution Requirements
    req_id: V12.3.4
    req_description: Verify that the application protects against Reflective File Download (RFD) by validating or ignoring user-submitted filenames in a JSON, JSONP, or URL parameter, the response Content-Type header should be set to text/plain, and the Content-Disposition header should have a fixed filename.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 641
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.3
    section_name: File Execution Requirements
    req_id: V12.3.5
    req_description: Verify that untrusted file metadata is not used directly with system API or libraries, to protect against OS command injection.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 78
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.3
    section_name: File Execution Requirements
    req_id: V12.3.6
    req_description: Verify that the application does not include and execute functionality from untrusted sources, such as unverified content distribution networks, JavaScript libraries, node npm libraries, or server-side DLLs.
    level1:
    level2: ✓
    level3: ✓
    cwe: 829
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.4
    section_name: File Storage Requirements
    req_id: V12.4.1
    req_description: Verify that files obtained from untrusted sources are stored outside the web root, with limited permissions, preferably with strong validation.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 922
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.4
    section_name: File Storage Requirements
    req_id: V12.4.2
    req_description: Verify that files obtained from untrusted sources are scanned by antivirus scanners to prevent upload of known malicious content.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 509
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.5
    section_name: File Download Requirements
    req_id: V12.5.1
    req_description: Verify that the web tier is configured to serve only files with specific file extensions to prevent unintentional information and source code leakage. For example, backup files (e.g. .bak), temporary working files (e.g. .swp), compressed files (.zip, .tar.gz, etc) and other extensions commonly used by editors should be blocked unless required.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 552
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.5
    section_name: File Download Requirements
    req_id: V12.5.2
    req_description: Verify that direct requests to uploaded files will never be executed as HTML/JavaScript content.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 434
    nist:
-
    chapter_id: V12
    module: Handling Files
    chapter_name: File and Resources Verification Requirements
    section_id: V12.6
    section_name: SSRF Protection Requirements
    req_id: V12.6.1
    req_description: Verify that the web or application server is configured with an allow list of resources or systems to which the server can send requests or load data/files from.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 918
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.1
    section_name: Generic Web Service Security Verification Requirements
    req_id: V13.1.1
    req_description: Verify that all application components use the same encodings and parsers to avoid parsing attacks that exploit different URI or file parsing behavior that could be used in SSRF and RFI attacks.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 116
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.1
    section_name: Generic Web Service Security Verification Requirements
    req_id: V13.1.2
    req_description: Verify that access to administration and management functions is limited to authorized administrators.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 419
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.1
    section_name: Generic Web Service Security Verification Requirements
    req_id: V13.1.3
    req_description: Verify API URLs do not expose sensitive information, such as the API key, session tokens etc.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 598
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.1
    section_name: Generic Web Service Security Verification Requirements
    req_id: V13.1.4
    req_description: Verify that authorization decisions are made at both the URI, enforced by programmatic or declarative security at the controller or router, and at the resource level, enforced by model-based permissions.
    level1:
    level2: ✓
    level3: ✓
    cwe: 285
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.1
    section_name: Generic Web Service Security Verification Requirements
    req_id: V13.1.5
    req_description: Verify that requests containing unexpected or missing content types are rejected with appropriate headers (HTTP response status 406 Unacceptable or 415 Unsupported Media Type).
    level1:
    level2: ✓
    level3: ✓
    cwe: 434
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.2
    section_name: RESTful Web Service Verification Requirements
    req_id: V13.2.1
    req_description: Verify that enabled RESTful HTTP methods are a valid choice for the user or action, such as preventing normal users using DELETE or PUT on protected API or resources.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 650
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.2
    section_name: RESTful Web Service Verification Requirements
    req_id: V13.2.2
    req_description: Verify that JSON schema validation is in place and verified before accepting input.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 20
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.2
    section_name: RESTful Web Service Verification Requirements
    req_id: V13.2.3
    req_description: 'Verify that RESTful web services that utilize cookies are protected from Cross-Site Request Forgery via the use of at least one or more of the following: double submit cookie pattern, CSRF nonces, or Origin request header checks.'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 352
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.2
    section_name: RESTful Web Service Verification Requirements
    req_id: V13.2.4
    req_description: Verify that REST services have anti-automation controls to protect against excessive calls, especially if the API is unauthenticated.
    level1:
    level2: ✓
    level3: ✓
    cwe: 770
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.2
    section_name: RESTful Web Service Verification Requirements
    req_id: V13.2.5
    req_description: Verify that REST services explicitly check the incoming Content-Type to be the expected one, such as application/xml or application/json.
    level1:
    level2: ✓
    level3: ✓
    cwe: 436
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.2
    section_name: RESTful Web Service Verification Requirements
    req_id: V13.2.6
    req_description: Verify that the message headers and payload are trustworthy and not modified in transit. Requiring strong encryption for transport (TLS only) may be sufficient in many cases as it provides both confidentiality and integrity protection. Per-message digital signatures can provide additional assurance on top of the transport protections for high-security applications but bring with them additional complexity and risks to weigh against the benefits.
    level1:
    level2: ✓
    level3: ✓
    cwe: 345
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.3
    section_name: SOAP Web Service Verification Requirements
    req_id: V13.3.1
    req_description: Verify that XSD schema validation takes place to ensure a properly formed XML document, followed by validation of each input field before any processing of that data takes place.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 20
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.3
    section_name: SOAP Web Service Verification Requirements
    req_id: V13.3.2
    req_description: Verify that the message payload is signed using WS-Security to ensure reliable transport between client and service.
    level1:
    level2: ✓
    level3: ✓
    cwe: 345
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.4
    section_name: GraphQL and other Web Service Data Layer Security Requirements
    req_id: V13.4.1
    req_description: Verify that a query allow list or a combination of depth limiting and amount limiting is used to prevent GraphQL or data layer expression Denial of Service (DoS) as a result of expensive, nested queries. For more advanced scenarios, query cost analysis should be used.
    level1:
    level2: ✓
    level3: ✓
    cwe: 770
    nist:
-
    chapter_id: V13
    module: Securing APIs
    chapter_name: API and Web Service Verification Requirements
    section_id: V13.4
    section_name: GraphQL and other Web Service Data Layer Security Requirements
    req_id: V13.4.2
    req_description: Verify that GraphQL or other data layer authorization logic should be implemented at the business logic layer instead of the GraphQL layer.
    level1:
    level2: ✓
    level3: ✓
    cwe: 285
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.1
    section_name: Build
    req_id: V14.1.1
    req_description: Verify that the application build and deployment processes are performed in a secure and repeatable way, such as CI / CD automation, automated configuration management, and automated deployment scripts.
    level1:
    level2: ✓
    level3: ✓
    cwe:
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.1
    section_name: Build
    req_id: V14.1.2
    req_description: Verify that compiler flags are configured to enable all available buffer overflow protections and warnings, including stack randomization, data execution prevention, and to break the build if an unsafe pointer, memory, format string, integer, or string operations are found.
    level1:
    level2: ✓
    level3: ✓
    cwe: 120
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.1
    section_name: Build
    req_id: V14.1.3
    req_description: Verify that server configuration is hardened as per the recommendations of the application server and frameworks in use.
    level1:
    level2: ✓
    level3: ✓
    cwe: 16
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.1
    section_name: Build
    req_id: V14.1.4
    req_description: Verify that the application, configuration, and all dependencies can be re-deployed using automated deployment scripts, built from a documented and tested runbook in a reasonable time, or restored from backups in a timely fashion.
    level1:
    level2: ✓
    level3: ✓
    cwe:
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.1
    section_name: Build
    req_id: V14.1.5
    req_description: Verify that authorized administrators can verify the integrity of all security-relevant configurations to detect tampering.
    level1:
    level2:
    level3: ✓
    cwe:
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.2
    section_name: Dependency
    req_id: V14.2.1
    req_description: Verify that all components are up to date, preferably using a dependency checker during build or compile time. ([C2](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 1026
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.2
    section_name: Dependency
    req_id: V14.2.2
    req_description: Verify that all unneeded features, documentation, samples, configurations are removed, such as sample applications, platform documentation, and default or example users.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 1002
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.2
    section_name: Dependency
    req_id: V14.2.3
    req_description: Verify that if application assets, such as JavaScript libraries, CSS or web fonts, are hosted externally on a Content Delivery Network (CDN) or external provider, Subresource Integrity (SRI) is used to validate the integrity of the asset.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 829
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.2
    section_name: Dependency
    req_id: V14.2.4
    req_description: Verify that third party components come from pre-defined, trusted and continually maintained repositories. ([C2](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 829
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.2
    section_name: Dependency
    req_id: V14.2.5
    req_description: Verify that an inventory catalog is maintained of all third party libraries in use. ([C2](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe:
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.2
    section_name: Dependency
    req_id: V14.2.6
    req_description: Verify that the attack surface is reduced by sandboxing or encapsulating third party libraries to expose only the required behaviour into the application. ([C2](https://owasp.org/www-project-proactive-controls/#div-numbering))
    level1:
    level2: ✓
    level3: ✓
    cwe: 265
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.3
    section_name: Unintended Security Disclosure Requirements
    req_id: V14.3.1
    req_description: Verify that web or application server and framework error messages are configured to deliver user actionable, customized responses to eliminate any unintended security disclosures.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 209
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.3
    section_name: Unintended Security Disclosure Requirements
    req_id: V14.3.2
    req_description: Verify that web or application server and application framework debug modes are disabled in production to eliminate debug features, developer consoles, and unintended security disclosures.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 497
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.3
    section_name: Unintended Security Disclosure Requirements
    req_id: V14.3.3
    req_description: Verify that the HTTP headers or any part of the HTTP response do not expose detailed version information of system components.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 200
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.4
    section_name: HTTP Security Headers Requirements
    req_id: V14.4.1
    req_description: Verify that every HTTP response contains a Content-Type header. text/*, */*+xml and application/xml content types should also specify a safe character set (e.g., UTF-8, ISO-8859-1).
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 173
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.4
    section_name: HTTP Security Headers Requirements
    req_id: V14.4.2
    req_description: 'Verify that all API responses contain a Content-Disposition: attachment; filename="api.json" header (or other appropriate filename for the content type).'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 116
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.4
    section_name: HTTP Security Headers Requirements
    req_id: V14.4.3
    req_description: Verify that a Content Security Policy (CSP) response header is in place that helps mitigate impact for XSS attacks like HTML, DOM, JSON, and JavaScript injection vulnerabilities.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 1021
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.4
    section_name: HTTP Security Headers Requirements
    req_id: V14.4.4
    req_description: 'Verify that all responses contain a X-Content-Type-Options: nosniff header.'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 116
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.4
    section_name: HTTP Security Headers Requirements
    req_id: V14.4.5
    req_description: 'Verify that a Strict-Transport-Security header is included on all responses and for all subdomains, such as Strict-Transport-Security: max-age=15724800; includeSubdomains.'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 523
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.4
    section_name: HTTP Security Headers Requirements
    req_id: V14.4.6
    req_description: Verify that a suitable "Referrer-Policy" header is included, such as "no-referrer" or "same-origin".
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 116
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.4
    section_name: HTTP Security Headers Requirements
    req_id: V14.4.7
    req_description: 'Verify that the content of a web application cannot be embedded in a third-party site by default and that embedding of the exact resources is only allowed where necessary by using suitable Content-Security-Policy: frame-ancestors and X-Frame-Options response headers.'
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 346
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.5
    section_name: Validate HTTP Request Header Requirements
    req_id: V14.5.1
    req_description: Verify that the application server only accepts the HTTP methods in use by the application/API, including pre-flight OPTIONS, and logs/alerts on any requests that are not valid for the application context.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 749
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.5
    section_name: Validate HTTP Request Header Requirements
    req_id: V14.5.2
    req_description: Verify that the supplied Origin header is not used for authentication or access control decisions, as the Origin header can easily be changed by an attacker.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 346
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.5
    section_name: Validate HTTP Request Header Requirements
    req_id: V14.5.3
    req_description: Verify that the Cross-Origin Resource Sharing (CORS) Access-Control-Allow-Origin header uses a strict allow list of trusted domains and subdomains to match against and does not support the "null" origin.
    level1: ✓
    level2: ✓
    level3: ✓
    cwe: 346
    nist:
-
    chapter_id: V14
    module: Configuration Management
    chapter_name: Configuration Verification Requirements
    section_id: V14.5
    section_name: Validate HTTP Request Header Requirements
    req_id: V14.5.4
    req_description: Verify that HTTP headers added by a trusted proxy or SSO devices, such as a bearer token, are authenticated by the application.
    level1:
    level2: ✓
    level3: ✓
    cwe: 306
    nist:
